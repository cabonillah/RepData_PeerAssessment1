source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c("swirl", "ggplot2", "data.table", "dplyr", "tidyr", "knitr", "tidyverse", "stringr", "lubridate", "XML", "jsonlite", "httr", "Rcpp", "plyr", "colorspace", "RColorBrewer"))
library(swirl)
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Exploratory Data Analysis")
swirl()
library("swirl")
swirl()
install.packages("fields")
library(swirl)
swirl()
install.packages("jpeg")
library("swirl")
swirl()
library("swirl")
swirl()
swirl()
swirl()
library("swirl")
Swirl
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
exit()
bye()
library(swirl)
swirl()
library(swirl)
swirl()
names(pm1) <- make.names((cnames[[1]][wcol]))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- sample.value(pm1)
x1 <- pm1$sample.value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
pm1
pm1.5
pm1.4
pm1[5]
x1 <- pm1[5]
x1 <- pm1$Sample.Value
bye()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1>0
negative <- x1<0
sum(negative na.rm = TRUE)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, (pm0$State.Code == 36) & (pm0$county.site %in% both))
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site, nrow))
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County-Code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2),c(4,4,2,1))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm  = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm  = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
heads(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[,2], xlim = c(.5,2.5)))
points(rep(2, 52), mrg[,3])
with(mrg, points(rep(2, 52), mrg[, 3]))
segments()
(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(dplyr)
library(ggplot2)
setwd("D:\\Archivos\\R\\RepData_PeerAssessment1")
if(!file.exists("activity.csv"))
{
unzip("activity.zip")
}
data <- read.csv("activity.csv", header = TRUE)
head(data)
fill_missing <- function(x)
{
replace(x, is.na(x), mean(x, na.rm = TRUE))
}
filled_data <- data %>% group_by(interval) %>% mutate(steps= fill_missing(steps))
head(filled_data)
?list
total_steps <- filled_data %>% select(date, steps) %>% group_by(date) %>% summarize(total_steps = sum(steps))
total_steps
hist(total_steps$total_steps)
hist(total_steps$total_steps, breaks = 20)
hist(total_steps$total_steps, xlab = "Steps", ylab = "Frequency", main = "Steps by day", breaks = 10)
data_day <- data %>% select(date, steps) %>% na.omit() %>% group_by(date) %>% summarize(total_steps= sum(steps))
steps_filled_sum <- filled_data %>% select(date, steps) %>% group_by(date) %>% summarize(total_steps = sum(steps))
hist(steps_filled_sum$total_steps, xlab = "Steps", ylab = "Frequency", main = "Steps by day", breaks = 10)
first_mean <- mean(data_day$total_steps)
second_mean <- mean(steps_filled_sum$total_steps)
first_mean
second_mean
first_median <- median(data_day$total_steps)
second_median <- median(steps_filled_sum$total_steps)
first_median
second_median
filled_data$date <- as.Date(filled_data$date)
filled_data$weekday <- weekdays(meandata$date)
filled_data$date <- as.Date(filled_data$date)
filled_data$weekday <- weekdays(filled_data$date)
filled_data$weekday
filled_data$date <- as.Date(filled_data$date)
filled_data$day <- weekdays(filled_data$date)
filled_data$day <- ifelse(filled_data$day=="S치bado" | filled_data$day=="Domingo", "Weekend", "Weekday" )
mean_by_day <- filled_data %>% group_by(day) %>% summarize(mean_steps_day_type = mean(steps))
mean_by_day
filled_data$date <- as.Date(filled_data$date)
filled_data$day <- weekdays(filled_data$date)
filled_data$day <- ifelse(filled_data$day=="Saturday" | filled_data$day=="Sunday", "Weekend", "Weekday" )
mean_by_day <- filled_data %>% group_by(day) %>% summarize(mean_steps_day_type = mean(steps))
mean_by_day
filled_data
filled_data$date <- as.Date(filled_data$date)
filled_data$day <- weekdays(filled_data$date)
filled_data$day <- ifelse(filled_data %in% c("saturday", "sunday"), "Weekend", "Weekday" )
mean_by_day <- filled_data %>% group_by(day) %>% summarize(mean_steps_day_type = mean(steps))
filled_data$day <- ifelse(filled_data$day %in% c("saturday", "sunday"), "Weekend", "Weekday" )
mean_by_day <- filled_data %>% group_by(day) %>% summarize(mean_steps_day_type = mean(steps))
mean_by_day
filled_data$day <- ifelse(filled_data$day %in% c("s치bado", "domingo"), "Weekend", "Weekday" )
mean_by_day <- filled_data %>% group_by(day) %>% summarize(mean_steps_day_type = mean(steps))
mean_by_day
filled_data$date <- as.Date(filled_data$date)
filled_data$day <- weekdays(filled_data$date)
filled_data
which(filled_data=="domingo")
which(filled_data$day=="domingo")
which(filled_data$day=="s치bado")
filled_data$day <- ifelse(filled_data$day=="s치bado" | filled_data$day=="domingo", "Weekend", "Weekday" )
filled_data
which(filled_data=="Weekend")
which(filled_data$day=="Weekend")
mean_by_day <- filled_data %>% group_by(day) %>% summarize(mean_steps_day_type = mean(steps))
mean_by_day
filled_data
mean_by_day <- filled_data %>% group_by(day, interval) %>% summarize(mean_steps_day_type = mean(steps))
mean_by_day
g
g <- ggplot(mean_by_day, aes(x=interval, y=steps))
g + geom_line() + facet_grid(day ~.) + xlab("Interval") + ylab("Steps") + ggtitle("Number of steps depending on the type of day")
g
ggplot(mean_by_day, aes(x=interval, y=steps)) + geom_line() + facet_grid(day ~.) + xlab("Interval") + ylab("Steps") + ggtitle("Number of steps depending on the type of day")
ggplot(mean_by_day, aes(x=interval, y=mean_steps_day_type)) + geom_line() + facet_grid(day ~.) + xlab("Interval") + ylab("Steps") + ggtitle("Number of steps depending on the type of day")
g <- ggplot(mean_by_day, aes(x=interval, y=mean_steps_day_type))
g + geom_line() + facet_grid(day ~.) + xlab("Interval") + ylab("Steps") + ggtitle("Number of steps depending on the type of day")
g <- ggplot(mean_by_day, aes(x=interval, y=mean_steps_day_type))
g <- g + geom_line() + facet_grid(day ~.)
g <- g + xlab("Interval") + ylab("Steps") + ggtitle("Number of steps depending on the type of day")
g
g
